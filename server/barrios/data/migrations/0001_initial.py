# Generated by Django 4.2.7 on 2023-11-30 05:22

import data.models.CustomFields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("category_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "category_name",
                    models.CharField(
                        blank=True, max_length=200, null=True, unique=True
                    ),
                ),
                (
                    "rate_category",
                    models.CharField(
                        blank=True, max_length=200, null=True, unique=True
                    ),
                ),
            ],
            options={
                "db_table": "categories",
            },
        ),
        migrations.CreateModel(
            name="IssFlightPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datedim", models.DateField()),
                ("port_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "vehicle_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vehicle_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("eva_name", models.CharField(blank=True, max_length=255, null=True)),
                ("eva_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "eva_accuracy",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("event", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "iss_flight_plan",
            },
        ),
        migrations.CreateModel(
            name="IssFlightPlanCrew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datedim", models.DateField()),
                (
                    "nationality_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("crew_count", models.IntegerField()),
            ],
            options={
                "db_table": "iss_flight_plan_crew",
            },
        ),
        migrations.CreateModel(
            name="IssFlightPlanCrewNationalityLookup",
            fields=[
                (
                    "nationality",
                    models.CharField(primary_key=True, serialize=False, unique=True),
                ),
                ("is_usos_crew", models.BooleanField()),
                ("is_rsa_crew", models.BooleanField()),
            ],
            options={
                "db_table": "iss_flight_plan_crew_nationality_lookup",
            },
        ),
        migrations.CreateModel(
            name="RsaConsumableWaterSummary",
            fields=[
                ("report_date", models.DateField(primary_key=True, serialize=False)),
                ("remain_potable_liters", models.FloatField()),
                ("remain_technical_liters", models.FloatField()),
                ("remain_rodnik_liters", models.FloatField()),
            ],
            options={
                "db_table": "rsa_consumable_water_summary",
            },
        ),
        migrations.CreateModel(
            name="TankCapacityDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tank_category", models.CharField(max_length=255, unique=True)),
                ("tank_capacity", models.FloatField()),
                ("units", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "tank_capacity_definition",
            },
        ),
        migrations.CreateModel(
            name="Upload",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to="uploads/",
                        validators=[
                            django.core.validators.FileExtensionValidator(["csv"])
                        ],
                    ),
                ),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "uploads",
            },
        ),
        migrations.CreateModel(
            name="UsRsWeeklyConsumableGasSummary",
            fields=[
                ("date", models.DateField(primary_key=True, serialize=False)),
                ("usos_o2_kg", data.models.CustomFields.EmptyStringToNoneFloatField()),
                ("rs_o2_kg", data.models.CustomFields.EmptyStringToNoneFloatField()),
                ("us_n2_kg", data.models.CustomFields.EmptyStringToNoneFloatField()),
                ("rs_n2_kg", data.models.CustomFields.EmptyStringToNoneFloatField()),
                (
                    "adjusted_o2_kg",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
                (
                    "adjusted_n2_kg",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
                (
                    "resupply_o2_kg",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "resupply_n2_kg",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "resupply_air_kg",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
            ],
            options={
                "db_table": "us_rs_weekly_consumables_gas_summary",
            },
        ),
        migrations.CreateModel(
            name="UsWeeklyConsumableWaterSummary",
            fields=[
                ("date", models.DateField(primary_key=True, serialize=False)),
                (
                    "corrected_potable_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
                (
                    "corrected_technical_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
                (
                    "corrected_total_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
                (
                    "resupply_potable_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "resupply_technical_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "corrected_predicted_l",
                    data.models.CustomFields.EmptyStringToNoneFloatField(),
                ),
            ],
            options={
                "db_table": "us_weekly_consumable_water_summary",
            },
        ),
        migrations.CreateModel(
            name="VehicleCapacityDef",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vehicle", models.CharField(max_length=255)),
                ("ascent_capacity_ctbe", models.IntegerField(blank=True, null=True)),
                ("descent_capacity_ctbe", models.IntegerField(blank=True, null=True)),
                ("trash_capacity_ctbe", models.IntegerField(blank=True, null=True)),
                ("total_capacity_ctbe", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "vehicle_capacity_def",
            },
        ),
        migrations.CreateModel(
            name="ThresholdsLimitsDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "threshold_category",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("threshold_value", models.FloatField()),
                (
                    "threshold_owner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("units", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.category",
                    ),
                ),
            ],
            options={
                "db_table": "thresholds_limits_definition",
            },
        ),
        migrations.CreateModel(
            name="RatesDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rate_category", models.CharField(max_length=255, unique=True)),
                (
                    "affected_consumable",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("rate", models.FloatField()),
                ("units", models.CharField(blank=True, max_length=255, null=True)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("efficiency", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "category",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        to="data.category",
                    ),
                ),
            ],
            options={
                "db_table": "rates_definition",
            },
        ),
        migrations.CreateModel(
            name="InventoryMgmtSystemConsumables",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("datedim", models.DateTimeField()),
                (
                    "ims_id",
                    data.models.CustomFields.EmptyStringToNoneIntegerField(null=True),
                ),
                (
                    "id_parent",
                    data.models.CustomFields.EmptyStringToNoneIntegerField(null=True),
                ),
                ("id_path", models.CharField(max_length=200)),
                (
                    "tree_depth",
                    data.models.CustomFields.EmptyStringToNoneIntegerField(null=True),
                ),
                ("tree", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "part_number",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("serial_number", models.CharField(blank=True, null=True)),
                (
                    "location_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "original_ip_owner",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "current_ip_owner",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "operational_nomenclature",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "russian_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "english_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("barcode", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "quantity",
                    data.models.CustomFields.EmptyStringToNoneIntegerField(null=True),
                ),
                (
                    "width",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "height",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "length",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "diameter",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "calculated_volume",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "stwg_ovrrd_vol",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "children_volume",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                (
                    "stwg_ovrrd_chldrn_vol",
                    data.models.CustomFields.EmptyStringToNoneFloatField(
                        blank=True, null=True
                    ),
                ),
                ("ovrrd_notes", models.CharField(blank=True, null=True)),
                ("volume_notes", models.CharField(blank=True, null=True)),
                ("expire_date", models.DateTimeField(blank=True, null=True)),
                ("launch", models.CharField(blank=True, null=True)),
                ("type", models.CharField(blank=True, null=True)),
                ("hazard", models.CharField(blank=True, null=True)),
                ("state", models.CharField(blank=True, null=True)),
                ("status", models.CharField(blank=True, null=True)),
                ("is_container", models.BooleanField(blank=True, null=True)),
                ("is_moveable", models.BooleanField(blank=True, null=True)),
                ("system", models.CharField(blank=True, null=True)),
                ("subsystem", models.CharField(blank=True, null=True)),
                ("action_date", models.DateTimeField(blank=True, null=True)),
                ("move_date", models.DateTimeField(blank=True, null=True)),
                ("fill_status", models.CharField(blank=True, null=True)),
                ("category_name", models.CharField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT, to="data.category"
                    ),
                ),
            ],
            options={
                "db_table": "inventory_mgmt_system_consumable",
            },
        ),
        migrations.CreateModel(
            name="ImsConsumablesCategoryLookup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category_name", models.CharField()),
                ("module_name", models.CharField(max_length=255)),
                ("module_id", models.IntegerField()),
                ("unique_cat_mod_id", models.CharField(max_length=255, unique=True)),
                (
                    "category",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.RESTRICT, to="data.category"
                    ),
                ),
            ],
            options={
                "db_table": "ims_consumables_category_lookup",
            },
        ),
        migrations.CreateModel(
            name="Consumable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="data.category"
                    ),
                ),
            ],
            options={
                "db_table": "consumables",
            },
        ),
    ]
